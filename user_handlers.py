# - * - coding: utf- 8 * -
from aiogram.dispatcher import FSMContext  # pip install aiogram

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
from main_variables import bot, dp, types

# –ò–º–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ id –∞–¥–º–∏–Ω–æ–≤ –∏ id –≥–ª–∞–≤–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
from config import ADMIN, ADMIN_CHANNEL

# –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–µ–Ω—é—à–µ–∫
from menus.users.main_menu import main_menu
from menus.users.cancel_btn import cancel_menu
from menus.inline.link_to_prices import price_menu
from menus.inline.link_to_portfolio import portfolio_menu
from menus.inline.link_to_services import services_menu
from menus.inline.link_to_reviews import reviews_menu

# –ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–æ–≤ 
from state import Ordering

# –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
import tg_analytic

# –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞–µ—Ç –±–æ—Ç
_commands = ['–û—Ç–º–µ–Ω–∞', 'üí¨–û—Ç–∑—ã–≤—ã', 'üí≥–¶–µ–Ω—ã', 'üóÇ–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ', 'üîñ–£—Å–ª—É–≥–∏', '‚úèÔ∏è–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑']

# –í—Å—Ç—Ä–µ—á–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
@dp.message_handler(lambda message: message.text == '/start' and message.from_user.id not in ADMIN and message.chat.type == 'private')
async def hello(message: types.Message):
    tg_analytic.statistics(message.chat.id, message.text)
    msg_text = """
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è –±–æ—Ç –≤–µ–±-—Å—Ç—É–¥–∏–∏ "Rustle Studio".
–ß–µ –Ω–∞–¥–æ-—Ç–æ?
    """
    await bot.send_message(message.chat.id, msg_text, reply_markup=main_menu)


# –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.message_handler(lambda message: message.text == '–û—Ç–º–µ–Ω–∞' and message.chat.type == 'private')
async def cancel_of_ordering(message: types.Message, state=FSMContext):
    await state.finish()
    await message.answer('–û—Ç–º–µ–Ω–∞', reply_markup=main_menu)                                                      


# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª —Å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º
@dp.message_handler(lambda message: message.text == 'üí¨–û—Ç–∑—ã–≤—ã' and message.chat.type == 'private')
async def link_to_prices(message: types.Message):
    tg_analytic.statistics(message.chat.id, message.text)
    await message.answer('–¢–æ–ª—å–∫–æ —Å–∞–º—ã–µ –ø—Ä–∞–≤–¥–∏–≤—ã–µ –æ—Ç–∑—ã–≤—ã: ', reply_markup=reviews_menu)


# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª —Å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–º
@dp.message_handler(lambda message: message.text == 'üí≥–¶–µ–Ω—ã' and message.chat.type == 'private')
async def link_to_prices(message: types.Message):
    tg_analytic.statistics(message.chat.id, message.text)
    await message.answer('–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å:', reply_markup=price_menu)


# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
@dp.message_handler(lambda message: message.text == 'üóÇ–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ' and message.chat.type == 'private')
async def link_to_portfolio(message: types.Message):
    tg_analytic.statistics(message.chat.id, message.text)
    await message.answer('–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=portfolio_menu)


# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö —É—Å–ª—É–≥
@dp.message_handler(lambda message: message.text == 'üîñ–£—Å–ª—É–≥–∏' and message.chat.type == 'private')
async def link_to_services(message: types.Message):
    tg_analytic.statistics(message.chat.id, message.text)
    await message.answer('–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏:', reply_markup=services_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–∑–≤–µ—Å—Ç–Ω—ã –±–æ—Ç—É
@dp.message_handler(lambda message: message.text not in _commands and message.chat.id not in ADMIN)
async def answer(message: types.Message):
    print(message)
    with open('AnimatedSticker.tgs', 'r') as sticker:
        await message.answer_sticker(r'CAACAgIAAxkBAAL_YWBTqRFBJ6cUl6J090JXfATjxe-TAAJHAwACbbBCA1JVK_k1xYCCHgQ')
        await message.answer('–ú–æ—è —Ç–≤–æ—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å, –ª—É—á—à–µ –ø–∏—à–∏ –±—É–∫–≤–∞–º–∏')


# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞
@dp.message_handler(lambda message: message.text == '‚úèÔ∏è–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑' and message.chat.type == 'private')
async def ordering(message: types.Message):
    await message.answer("""
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ - –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É üëá

1. –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?
2. –í –∫–∞–∫–∏–µ —Å—Ä–æ–∫–∏ –Ω—É–∂–Ω–æ —É–ª–æ–∂–∏—Ç—å—Å—è?

–í–∞–º –æ—Ç–≤–µ—Ç—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏üêº
    """, reply_markup=cancel_menu)
    await Ordering.info_about_service.set()


# –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
@dp.message_handler(state=Ordering.info_about_service)
async def end_of_ordering(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['text'] = message.text

        if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
            await message.forward(ADMIN_CHANNEL)
            await message.answer('–°–ø–∞—Å–∏–±–æ, –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è', reply_markup=main_menu)
        else:
            await message.answer('–û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞', reply_markup=main_menu)
        
        await state.finish()